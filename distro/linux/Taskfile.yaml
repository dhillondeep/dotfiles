version: '3'

includes:
  generic: ../Taskfile.yaml

tasks:
  setup:
    - task: generic:setup-paths
    # essentials
    - sudo apt install -y git tmux curl sshuttle apt-transport-https ca-certificates gnupg
    - task: install-nvim
    - task: install-envman
    # faster tools
    - sudo apt install -y bat exa ripgrep fd-find
      # -- zoxide --
    - curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash
      # -- fd --
    - ln -sf $(which fdfind) ~/.local/bin/fd
      # -- bat --
    - ln -sf $(which batcat) ~/.local/bin/bat
      # -- fzf --
    - DIR=~/.fzf && git -C "$DIR" pull || (git clone --depth=1 https://github.com/junegunn/fzf.git "$DIR" && $DIR/install)
    # development
    - sudo apt install -y build-essential cmake ninja-build make golang python3 yarn python3-pip
      # -- nodejs --
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
    - nvm install --lts
      # -- bazel --
    - task: install-bazel
      # -- k8s and containers --
    - sudo apt install -y docker docker-compose
    - curl -sS https://webinstall.dev/k9s | bash
      # -- lazygit --
    - go install github.com/jesseduffield/lazygit@latest
      # -- github cli --
    - task: install-github-cli
      # -- gcloud cli --
    - task: install-gcloud-cli
      # -- aws cli --
    - task: install-aws-cli
      # -- help
    - task: generic:install-helm

  # envman (2.4.0)
  install-envman:
    - curl -fL https://github.com/bitrise-io/envman/releases/download/2.4.0/envman-"$(uname -s)"-"$(uname -m)" > ~/.local/bin/envman
    - chmod +x ~/.local/bin/envman

  # neovim (stable)
  install-nvim:
    dir: ~/Lab/apps
    vars:
      file_name: nvim-linux64
      link_path: ~/.local/bin/nvim
    cmds:
      - rm -rf nvim
      - wget -qO- https://github.com/neovim/neovim/releases/download/v0.9.0/{{.file_name}}.tar.gz | tar xvz -C .
      - mv {{.file_name}} nvim
      - chmod +x ./nvim/bin/nvim
      - rm -rf {{.link_path}} && ln -sf ~/Lab/apps/nvim/bin/nvim {{.link_path}}
      - mkdir -p ~/.vim/sessions

  install-bazel:
    - curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg
    - sudo mv bazel-archive-keyring.gpg /usr/share/keyrings
    - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
    - sudo apt update && sudo apt install -y bazel
    - go install github.com/bazelbuild/bazelisk@latest

  install-github-cli:
    - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    - sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    - sudo apt update
    - sudo apt install gh -y

  install-gcloud-cli:
    dir: ~/lab/apps/
    vars:
      file_name: google-cloud-cli-425.0.0-linux-x86_64.tar.gz
    cmds:
      - curl -o https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/{{.file_name}}
      - tar -xf {{.file_name}} && rm -rf {{.file_name}}
      - rm -rf gcloud-cli && mv google-cloud-sdk ./gcloud-cli
      - ./gcloud-cli/install.sh --path-update=false --usage-reporting=false --command-completion=false

  install-aws-cli:
    dir: ~/lab/apps/
    vars:
      file_name: awscli-exe-linux-x86_64.zip
    cmds:
      - curl "https://awscli.amazonaws.com/{{.file_name}}" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install

  add-ssh-key:
    cmds:
      - ssh-add ~/.ssh/{{.KeyName}}
